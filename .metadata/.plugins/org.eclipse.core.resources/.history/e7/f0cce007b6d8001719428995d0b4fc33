package my.ab.app;

import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;
import com.esri.arcgisruntime.mapping.ArcGISMap;
import com.esri.arcgisruntime.mapping.Basemap;
import com.esri.arcgisruntime.mapping.view.MapView;
import com.esri.arcgisruntime.portal.Portal;
import com.esri.arcgisruntime.portal.PortalItem;
import com.esri.arcgisruntime.tasks.offlinemap.OfflineMapTask;

public class MyMapApp extends Application {
	private MapView mapView;

@Override
public void start(Stage stage) throws Exception {
// create stack pane and application scene
	StackPane stackPane = new StackPane();
	Scene scene = new Scene(stackPane);
	// Load map from a portal item
	final Portal portal = new Portal("http://www.arcgis.com");
	final PortalItem webmapItem = new PortalItem(portal, "acc027394bc84c2fb04d1ed317aac674");
	// Create map and add it to the view
	final ArcGISMap myMap = new ArcGISMap(webmapItem);
	mapView = new MapView();
	mapView.setMap(myMap);
	// Create task and set parameters
	//final OfflineMapTask offlineMapTask = new OfflineMapTask(myMap);
	//create a ArcGISMap with the a Basemap instance with an Imagery base layer
	//ArcGISMap map = new ArcGISMap(Basemap.createImagery());
	//set the map to be displayed in this view
	//mapView = new MapView();
	//mapView.setMap(map);
	//add the map view to stack pane
	stackPane.getChildren().addAll( new Label("Go!"),mapView);

	/**
	* Stops and releases all resources used in application.
	*/

// set title, size, and add scene to stage
stage.setTitle("Display Map Sample");
stage.setWidth(800);
stage.setHeight(700);
stage.setScene(scene);
stage.show();
}
public void stop() throws Exception {
	if (mapView != null) {
	mapView.dispose();
	}
	}
/**
* Opens and runs application.
*
* @param args arguments passed to this application
*/
public static void main(String[] args) {
Application.launch(args);
}
}